// THIS FILE IS GENERATED
// WARNING! All changes made in this file will be lost!

#include "javavisitor.h"

namespace java
{

Visitor::ParserFuncType Visitor::sParserTable[] =
{
    reinterpret_cast<ParserFuncType>(&Visitor::visitAdditiveExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAdditiveExpressionRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationArguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationElementArrayInitializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationElementArrayValue),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationElementValue),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationElementValuePair),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationMethodDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationTypeBody),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationTypeDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotationTypeField),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArrayAccess),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArrayCreatorRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArrayTypeDotClass),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAssertStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBitAndExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBitOrExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBitXOrExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBlock),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBlockStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBreakStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBuiltInType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBuiltInTypeDotClass),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCastExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCatchClause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassAccessData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassBody),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassExtendsClause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassField),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassOrInterfaceTypeName),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassOrInterfaceTypeNamePart),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClassType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCompilationUnit),
    reinterpret_cast<ParserFuncType>(&Visitor::visitConditionalExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitConstructorDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitContinueStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDoWhileStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEmbeddedStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnumBody),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnumConstant),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnumConstantBody),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnumConstantField),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnumDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEqualityExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEqualityExpressionRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitForClauseTraditionalRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitForControl),
    reinterpret_cast<ParserFuncType>(&Visitor::visitForStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitForeachDeclarationData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitIdentifier),
    reinterpret_cast<ParserFuncType>(&Visitor::visitIfStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImplementsClause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImportDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterfaceBody),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterfaceDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterfaceExtendsClause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterfaceField),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterfaceMethodDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLabeledStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLiteral),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLogicalAndExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLogicalOrExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMandatoryArrayBuiltInType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMandatoryDeclaratorBrackets),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMethodCallData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMethodDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMultiplicativeExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMultiplicativeExpressionRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNewExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNonArrayType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNonWildcardTypeArguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalArgumentList),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalArrayBuiltInType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalDeclaratorBrackets),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalModifiers),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalParameterDeclarationList),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptionalParameterModifiers),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPackageDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitParameterDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitParameterDeclarationEllipsis),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPostfixOperator),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimaryAtom),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimaryExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimarySelector),
    reinterpret_cast<ParserFuncType>(&Visitor::visitQualifiedIdentifier),
    reinterpret_cast<ParserFuncType>(&Visitor::visitQualifiedIdentifierWithOptionalStar),
    reinterpret_cast<ParserFuncType>(&Visitor::visitRelationalExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitRelationalExpressionRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitReturnStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShiftExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShiftExpressionRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSimpleNameAccessData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitStatementExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSuperAccessData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSuperSuffix),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitchLabel),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitchSection),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitchStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSynchronizedStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThisAccessData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThisCallData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThrowStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThrowsClause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTryStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeArgument),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeArgumentType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeArguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeArgumentsOrParametersEnd),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeParameter),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTypeParameters),
    reinterpret_cast<ParserFuncType>(&Visitor::visitUnaryExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitUnaryExpressionNotPlusMinus),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableArrayInitializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclarationData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclarationRest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclarationSplitData),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclarationStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableDeclarator),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariableInitializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWhileStatement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWildcardType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWildcardTypeBounds)
}; // sParserTable[]

} // end of namespace java

