// THIS FILE IS GENERATED
// WARNING! All changes made in this file will be lost!

#include "javavisitor.h"

namespace java
{

Visitor::ParserFuncType Visitor::sParserTable[] =
{
    reinterpret_cast<ParserFuncType>(&Visitor::visitAdditive_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAdditive_expression_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_arguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_element_array_initializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_element_array_value),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_element_value),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_element_value_pair),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_method_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_type_body),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_type_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAnnotation_type_field),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArray_access),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArray_creator_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitArray_type_dot_class),
    reinterpret_cast<ParserFuncType>(&Visitor::visitAssert_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBit_and_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBit_or_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBit_xor_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBlock),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBlock_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBreak_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBuiltin_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitBuiltin_type_dot_class),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCast_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCatch_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_access_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_body),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_extends_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_field),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_or_interface_type_name),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_or_interface_type_name_part),
    reinterpret_cast<ParserFuncType>(&Visitor::visitClass_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitCompilation_unit),
    reinterpret_cast<ParserFuncType>(&Visitor::visitConditional_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitConstructor_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitContinue_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitDo_while_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEmbedded_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnum_body),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnum_constant),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnum_constant_body),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnum_constant_field),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEnum_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEquality_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitEquality_expression_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitExpression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFor_clause_traditional_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFor_control),
    reinterpret_cast<ParserFuncType>(&Visitor::visitFor_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitForeach_declaration_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitIdentifier),
    reinterpret_cast<ParserFuncType>(&Visitor::visitIf_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImplements_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitImport_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterface_body),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterface_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterface_extends_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterface_field),
    reinterpret_cast<ParserFuncType>(&Visitor::visitInterface_method_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLabeled_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLiteral),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLogical_and_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitLogical_or_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMandatory_array_builtin_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMandatory_declarator_brackets),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMethod_call_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMethod_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMultiplicative_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitMultiplicative_expression_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNew_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNon_array_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitNon_wildcard_type_arguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_argument_list),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_array_builtin_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_declarator_brackets),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_modifiers),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_parameter_declaration_list),
    reinterpret_cast<ParserFuncType>(&Visitor::visitOptional_parameter_modifiers),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPackage_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitParameter_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitParameter_declaration_ellipsis),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPostfix_operator),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimary_atom),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimary_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitPrimary_selector),
    reinterpret_cast<ParserFuncType>(&Visitor::visitQualified_identifier),
    reinterpret_cast<ParserFuncType>(&Visitor::visitQualified_identifier_with_optional_star),
    reinterpret_cast<ParserFuncType>(&Visitor::visitRelational_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitRelational_expression_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitReturn_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShift_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitShift_expression_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSimple_name_access_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitStatement_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSuper_access_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSuper_suffix),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitch_label),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitch_section),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSwitch_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitSynchronized_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThis_access_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThis_call_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThrow_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitThrows_clause),
    reinterpret_cast<ParserFuncType>(&Visitor::visitTry_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_argument),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_argument_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_arguments),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_arguments_or_parameters_end),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_parameter),
    reinterpret_cast<ParserFuncType>(&Visitor::visitType_parameters),
    reinterpret_cast<ParserFuncType>(&Visitor::visitUnary_expression),
    reinterpret_cast<ParserFuncType>(&Visitor::visitUnary_expression_not_plusminus),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_array_initializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declaration),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declaration_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declaration_rest),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declaration_split_data),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declaration_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_declarator),
    reinterpret_cast<ParserFuncType>(&Visitor::visitVariable_initializer),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWhile_statement),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWildcard_type),
    reinterpret_cast<ParserFuncType>(&Visitor::visitWildcard_type_bounds)
}; // sParserTable[]

} // end of namespace java

